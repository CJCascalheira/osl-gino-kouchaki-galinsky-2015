positive_affect, embarrassment, self_alienation, decided_to_help))
library(tidyverse) # utility
library(psych) # cronbach's alpha
# Cronbach's alpha
gino_all %>%
select(contains("impurity"))
# Cronbach's alpha
gino_all %>%
select(contains("impurity")) %>%
alpha()
library(psych)
# Cronbach's alpha
gino_all %>%
select(contains("impurity")) %>%
psych::alpha()
gino_all
# Cronbach's alpha
gino_all %>%
select(impurity_1:impurity_3) %>%
psych::alpha()
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "~/GitHub/osl-gino-kouchaki-galinsky-2015/src")
library(tidyverse) # utility
library(psych) # cronbach's alpha
gino <- read_csv("../data/Gino Kouchaki Galinsky 2015 Experiment 3.csv")
glimpse(gino)
gino_clean <- gino %>%
filter(FAILED_MC == 0) %>%
select(-c(instr, filter, CONDITION, FAILED_MC, MCheck, age, male),
-ends_with("Dummy")) %>%
rename(condition = condition_string)
gino_clean <- within(gino_clean, {
condition <- factor(condition)
})
(gino_means <- gino_clean %>%
mutate(
feelings_of_impurity = select(gino_clean, starts_with("impurity")) %>% rowMeans(),
feelings_of_discomfort = select(gino_clean, starts_with("dissonance")) %>% rowMeans(),
negative_affect = select(gino_clean, starts_with("neg")) %>% rowMeans(),
positive_affect = select(gino_clean, starts_with("pos")) %>% rowMeans(),
embarrassment = select(gino_clean, embarrassed, ashamed) %>% rowMeans(),
self_alienation = select(gino_clean, starts_with("alien")) %>% rowMeans()
) %>%
select(condition, feelings_of_impurity, feelings_of_discomfort, negative_affect,
positive_affect, embarrassment, self_alienation, decided_to_help))
# Cronbach's alpha for feelings of impurity
gino_clean %>%
select(starts_with("impurity")) %>%
psych::alpha()
# Cronbach's alpha for feelings of discomfort
gino_clean %>%
select(starts_with("dissonance")) %>%
psych::alpha()
# Cronbach's alpha for negative affect
gino_clean %>%
select(starts_with("neg")) %>%
psych::alpha()
# Cronbach's alpha for positive affect
gino_clean %>%
select(starts_with("pos")) %>%
psych::alpha()
# Cronbach's alpha for embarrassment
gino_clean %>%
select(embarrassed, ashamed) %>%
psych::alpha()
# Cronbach's alpha for embarrassment
gino_clean %>%
select(embarrassed, ashamed) %>%
psych::alpha()
# Cronbach's alpha for self-alienation
gino_clean %>%
select(starts_with("alien")) %>%
psych::alpha()
# Cronbach's alpha for feelings of impurity
gino_clean %>%
select(starts_with("impurity")) %>%
psych::alpha()
# Cronbach's alpha for feelings of discomfort
gino_clean %>%
select(starts_with("dissonance")) %>%
psych::alpha()
# Cronbach's alpha for negative affect
gino_clean %>%
select(starts_with("neg")) %>%
psych::alpha()
# Cronbach's alpha for positive affect
gino_clean %>%
select(starts_with("pos")) %>%
psych::alpha()
# Cronbach's alpha for embarrassment
gino_clean %>%
select(embarrassed, ashamed) %>%
psych::alpha()
# Cronbach's alpha for self-alienation
gino_clean %>%
select(starts_with("alien")) %>%
psych::alpha()
# Cronbach's alpha for feelings of impurity
gino_clean %>%
select(starts_with("impurity")) %>%
psych::alpha()
gino_means %>%
group_by(condition) %>%
describe()
gino_means %>%
describe()
gino_means %>%
filter(condition == "neutral") %>%
describe()
gino_means %>%
filter(condition == "neutral") %>%
select(-condition) %>%
describe()
unique(gino_means$decided_to_help)
gino_means$condition
# Inauthenticity condition
gino_means %>%
filter(condition == "inauthenticity") %>%
select(-c(condition, decided_to_help)) %>%
describe()
# Failure condition
gino_means %>%
filter(condition == "failure") %>%
select(-c(condition, decided_to_help)) %>%
describe()
# Control condition
gino_means %>%
filter(condition == "neutral") %>%
select(-c(condition, decided_to_help)) %>%
describe()
# Inauthenticity helping
gino_means %>%
group_by(condition) %>%
summarize(
percent_helped = mean(decided_to_help)
)
gino_clean %>%
select(-decided_to_help)
gino_means %>%
select(-decided_to_help)
gino_means %>%
select(-decided_to_help) %>%
gather(key = item, value = score, -condition)
gino_means %>%
select(-decided_to_help) %>%
gather(key = item, value = score, -condition) %>%
group_by(condition, as.factor(item))
gino_means %>%
select(-decided_to_help) %>%
gather(key = item, value = score, -condition) %>%
group_by(condition, item) %>%
summarize(
mean = mean(item)
)
warnings()
gino_means %>%
select(-decided_to_help) %>%
gather(key = item, value = score, -condition) %>%
group_by(condition, item) %>%
summarize(
mean = mean(score)
)
# Control condition
(control <- gino_means %>%
filter(condition == "neutral") %>%
select(-c(condition, decided_to_help)) %>%
describe())
0.975+0.25
0.05/2
0.975 + 0.025
gino_means %>%
select(-decided_to_help) %>%
gather(key = item, value = score, -condition) %>%
group_by(condition, item) %>%
summarize(
mean = mean(score),
sd = sd(score),
upper = quantile(score, 0.975),
lower = quantile(score, 0.025)
)
gino_means %>%
select(-decided_to_help) %>%
gather(key = item, value = score, -condition) %>%
group_by(condition, item) %>%
summarize(
mean = mean(score),
sd = sd(score),
upper = quantile(score, 0.95),
lower = quantile(score, 0.05)
)
gino_means %>%
select(-decided_to_help) %>%
gather(key = item, value = score, -condition) %>%
group_by(condition, item) %>%
summarize(
mean = mean(score),
sd = sd(score),
upper = quantile(mean, 0.95),
lower = quantile(mean, 0.05)
)
gino_means %>%
select(-decided_to_help) %>%
gather(key = item, value = score, -condition) %>%
group_by(condition, item) %>%
summarize(
mean = mean(score),
sd = sd(score),
n = n(),
upper = quantile(mean, 0.95),
lower = quantile(mean, 0.05)
)
gino_means %>%
select(-decided_to_help) %>%
gather(key = item, value = score, -condition) %>%
group_by(condition, item) %>%
summarize(
mean = mean(score),
sd = sd(score),
n = n(),
t_star = qt(p = 0.975, df = n - 1),
upper = quantile(mean, 0.95),
lower = quantile(mean, 0.05)
)
gino_means %>%
select(-decided_to_help) %>%
gather(key = item, value = score, -condition) %>%
group_by(condition, item) %>%
summarize(
mean = mean(score),
sd = sd(score),
n = n(),
t_star = qt(p = 0.95, df = n - 1),
upper = quantile(mean, 0.95),
lower = quantile(mean, 0.05)
)
gino_means %>%
select(-decided_to_help) %>%
gather(key = item, value = score, -condition) %>%
group_by(condition, item) %>%
summarize(
mean = mean(score),
sd = sd(score),
n = n(),
t_star = qt(p = 0.975, df = n - 1),
upper = quantile(mean, 0.95),
lower = quantile(mean, 0.05)
)
gino_means %>%
select(-decided_to_help) %>%
gather(key = item, value = score, -condition) %>%
group_by(condition, item) %>%
summarize(
mean = mean(score),
sd = sd(score),
n = n(),
t_star = qt(p = 0.975, df = n - 1),
upper = mean + (t_star * sd/sqrt(n)),
lower = mean - (t_star * sd/sqrt(n))
)
gino_means %>%
select(-decided_to_help) %>%
gather(key = item, value = score, -condition) %>%
group_by(condition, item) %>%
summarize(
mean = mean(score),
sd = sd(score),
n = n(),
t_star = qt(p = 0.95, df = n - 1),
upper = mean + (t_star * sd/sqrt(n)),
lower = mean - (t_star * sd/sqrt(n))
)
gino_means %>%
select(-decided_to_help) %>%
gather(key = item, value = score, -condition) %>%
group_by(condition, item) %>%
summarize(
mean = mean(score),
sd = sd(score),
n = n(),
t_star = qt(p = 0.975, df = n - 1),
upper = mean + (t_star * sd/sqrt(n)),
lower = mean - (t_star * sd/sqrt(n))
)
gino_means %>%
select(-decided_to_help) %>%
gather(key = item, value = score, -condition) %>%
group_by(condition, item) %>%
summarize(
mean = mean(score),
sd = sd(score),
n = n(),
t_star = qt(p = 0.975, df = n - 1),
upper = mean + (t_star * (sd/sqrt(n))),
lower = mean - (t_star * (sd/sqrt(n)))
)
gino_means %>%
select(-decided_to_help) %>%
gather(key = item, value = score, -condition) %>%
group_by(condition, item) %>%
summarize(
mean = mean(score),
sd = sd(score),
n = n(),
t_star = qt(p = 0.95, df = n - 1),
upper = mean + (t_star * (sd/sqrt(n))),
lower = mean - (t_star * (sd/sqrt(n)))
)
gino_means %>%
select(-decided_to_help) %>%
gather(key = item, value = score, -condition) %>%
group_by(condition, item) %>%
summarize(
mean = mean(score),
sd = sd(score),
n = n(),
t_star = qt(p = 0.955, df = n - 1),
upper = mean + (t_star * (sd/sqrt(n))),
lower = mean - (t_star * (sd/sqrt(n)))
)
gino_means %>%
select(-decided_to_help) %>%
gather(key = item, value = score, -condition) %>%
group_by(condition, item) %>%
summarize(
mean = mean(score),
sd = sd(score),
n = n(),
t_star = qt(p = 0.9555, df = n - 1),
upper = mean + (t_star * (sd/sqrt(n))),
lower = mean - (t_star * (sd/sqrt(n)))
)
gino_means %>%
select(-decided_to_help) %>%
gather(key = item, value = score, -condition) %>%
group_by(condition, item) %>%
summarize(
mean = mean(score),
sd = sd(score),
n = n(),
t_star = qt(p = 0.95, df = n - 1),
upper = mean + (t_star * (sd/sqrt(n))),
lower = mean - (t_star * (sd/sqrt(n)))
)
gino_means %>%
select(-decided_to_help) %>%
gather(key = item, value = score, -condition) %>%
group_by(condition, item) %>%
summarize(
mean = mean(score),
sd = sd(score),
n = n(),
t_star = qt(p = 0.975, df = n - 1),
upper = mean + (t_star * (sd/sqrt(n))),
lower = mean - (t_star * (sd/sqrt(n)))
)
gino_means %>%
select(-decided_to_help) %>%
gather(key = item, value = score, -condition) %>%
group_by(condition, item) %>%
summarize(
mean = mean(score),
sd = sd(score),
n = n(),
t_star = qt(p = 0.975, df = n - 1),
upper = mean + (t_star * sd),
lower = mean - (t_star * sd)
)
gino_means %>%
select(-decided_to_help) %>%
gather(key = item, value = score, -condition) %>%
group_by(condition, item) %>%
summarize(
mean = mean(score),
sd = sd(score),
n = n(),
t_star = qt(p = 0.975, df = n - 1),
upper = mean + (t_star * (sd/sqrt(n))),
lower = mean - (t_star * (sd/sqrt(n)))
)
gino_means %>%
select(-decided_to_help) %>%
gather(key = item, value = score, -condition) %>%
group_by(condition, item) %>%
summarize(
mean = mean(score),
sd = sd(score),
n = n(),
t_star = qt(p = 0.975, df = n - 1),
u = quantile(mean, 0.975),
l = quantile(mean, 0.025),
upper = mean + (t_star * (sd/sqrt(n))),
lower = mean - (t_star * (sd/sqrt(n)))
)
quantile(4.69, 0.975)
gino_means %>%
select(-decided_to_help) %>%
gather(key = item, value = score, -condition) %>%
group_by(condition, item) %>%
summarize(
mean = mean(score),
sd = sd(score),
n = n(),
t_star = qt(p = 0.975, df = n - 1),
u = quantile(score, 0.975),
l = quantile(score, 0.025),
upper = mean + (t_star * (sd/sqrt(n))),
lower = mean - (t_star * (sd/sqrt(n)))
)
gino_means %>%
select(-decided_to_help) %>%
gather(key = item, value = score, -condition) %>%
group_by(condition, item) %>%
summarize(
mean = mean(score),
sd = sd(score),
n = n(),
t_star = qt(p = 0.975, df = n - 1),
upper = mean + (t_star * (sd/sqrt(n))),
lower = mean - (t_star * (sd/sqrt(n)))
)
gino_means %>%
select(-decided_to_help) %>%
gather(key = item, value = score, -condition) %>%
group_by(condition, item) %>%
summarize(
mean = mean(score),
sd = sd(score),
n = n(),
t_star = qt(p = 0.975, df = n - 1),
upper = mean + (t_star * (sd/sqrt(n))),
lower = mean - (t_star * (sd/sqrt(n)))
)
gino_means %>%
select(-decided_to_help) %>%
gather(key = item, value = score, -condition) %>%
group_by(condition, item) %>%
summarize(
mean = mean(score),
sd = sd(score),
n = n(),
t_star = qt(p = 0.975, df = n - 1),
upper = mean + (1.96 * (sd/sqrt(n))),
lower = mean - (1.96 * (sd/sqrt(n)))
)
gino_means %>%
select(-decided_to_help) %>%
gather(key = item, value = score, -condition) %>%
group_by(condition, item) %>%
summarize(
mean = mean(score),
sd = sd(score),
n = n(),
t_star = qt(p = 0.975, df = n - 1),
upper = mean + (t_star * (sd/sqrt(n))),
lower = mean - (t_star * (sd/sqrt(n)))
)
library(Rmisc)
gino_means %>%
select(-decided_to_help) %>%
gather(key = item, value = score, -condition) %>%
group_by(condition, item) %>%
group.CI(score, ci = 0.95)
gino_means %>%
select(-decided_to_help) %>%
gather(key = item, value = score, -condition) %>%
group_by(condition, item) %>%
group.CI(score ~ condition + item, ci = 0.95)
gino_means %>%
select(-decided_to_help) %>%
gather(key = item, value = score, -condition) %>%
group.CI(score ~ condition + item, ci = 0.95)
long <- gino_means %>%
select(-decided_to_help) %>%
gather(key = item, value = score, -condition)
group.CI(score ~ condition + item, long, ci = 0.95)
gino_means %>%
select(-decided_to_help) %>%
gather(key = item, value = score, -condition) %>%
group_by(condition, item) %>%
summarize(
mean = mean(score),
sd = sd(score),
n = n(),
t_star = qt(p = 0.975, df = n - 1),
upper = mean + (t_star * (sd/sqrt(n))),
lower = mean - (t_star * (sd/sqrt(n)))
)
gino_means %>%
select(-decided_to_help) %>%
gather(key = item, value = score, -condition) %>%
group_by(condition, item) %>%
summarize(
mean = mean(score),
sd = sd(score),
n = n(),
t_star = qt(p = 0.975, df = n - 1),
upper = mean + (t_star * (sd/sqrt(n))),
lower = mean - (t_star * (sd/sqrt(n)))
)
detach("package:Rmisc", unload=TRUE)
gino_means %>%
select(-decided_to_help) %>%
gather(key = item, value = score, -condition) %>%
group_by(condition, item) %>%
summarize(
mean = mean(score),
sd = sd(score),
n = n(),
t_star = qt(p = 0.975, df = n - 1),
upper = mean + (t_star * (sd/sqrt(n))),
lower = mean - (t_star * (sd/sqrt(n)))
)
