SD = sd
) %>%
arrange(item))
# Drop confidence interval information
(gino_summary_short <- gino_summary %>%
select(condition, item, mean, sd))
# Rename columns
(gino_summary_short <- gino_summary_short %>%
rename(
Variable = item,
M = mean,
SD = sd
) %>%
arrange(item))
# Drop confidence interval information
(gino_summary_short <- gino_summary %>%
select(condition, item, mean, sd))
# Rename columns
(gino_summary_short <- gino_summary_short %>%
rename(
Variable = item,
M = mean,
SD = sd
) %>%
arrange(Variable))
# Separate by condition
gino_summary_short %>%
filter(condition == "inauthenticity") %>%
ungroup() %>%
select(Variable, M, SD)
gino_summary_short %>%
filter(condition == "failure") %>%
ungroup() %>%
select(M, SD)
gino_summary_short %>%
filter(condition == "neutral") %>%
ungroup() %>%
select(M, SD)
failure <- gino_summary_short %>%
filter(condition == "failure") %>%
ungroup() %>%
select(M, SD)
condition <- gino_summary_short %>%
filter(condition == "neutral") %>%
ungroup() %>%
select(M, SD)
bind_cols(failure, condition)
# Separate by condition
(gino_table <- gino_summary_short %>%
filter(condition == "inauthenticity") %>%
ungroup() %>%
select(Variable, M, SD))
bind_cols(gino_table, failure, condition)
# Prepare table format
bind_cols(gino_table, failure, condition)
# Prepare table format
(clean_table <- bind_cols(gino_table, failure, condition))
100-59
factorial(4)
factorial(5)
factorial(6)
factorial(7)
(factorial(100)/(factorial(59) * factorial(41)))
(factorial(100)/(factorial(59) * factorial(41))) * (0.59^59) * (0.41^41)
3/60
4/120
4/50
10/125
3/40
5/40
3/75
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(infer)
library(openintro)
manhattan <- tibble(rent = c(3850, 3800, 2350, 3200, 2150, 3267, 2495, 2349, 3950, 1795, 2145, 2300, 1775, 2000, 2175, 2350, 2550, 4195, 1470, 2350))
rent_ci_med <- manhattan %>%
# Specify the variable of interest
specify(response = "rent") %>%
# Generate bootstrap resamples
generate(reps = 15000, type = "bootstrap") %>%
# Calculate bootstrap statistic for each resample
calculate(stat = "median")
# Plot the bootstrap distribution
ggplot(rent_ci_med, aes(x = stat)) +
geom_histogram(binwidth = 50)
rent_ci_med %>%
summarize(
upper = quantile(stat, 0.975),
lower = quantile(stat, 0.025)
)
# Calculate observed statistic
rent_med_obs <- manhattan %>%
summarise(med = median(rent)) %>%
pull()
# Calculate critical value
t_star <- qt(p = 0.975, df = nrow(manhattan) - 1)
# Confidence interval using standard error method
rent_ci_med %>%
summarize(se_boot = sd(stat)) %>%
summarize(
upper = rent_med_obs + t_star * se_boot,
lower = rent_med_obs - t_star * se_boot
)
# Bootstrap distribution centered around the null value
rent_med_ht <- manhattan %>%
# Specify the variable of interest
specify(response = rent) %>%
# Hypothesize the center of the bootstrap distribution where the median is 2500
hypothesize(null = "point", med = 2500) %>%
# Generate bootstrap resamples
generate(reps = 15000, type = "bootstrap") %>%
# Calculate the bootstrap statistic
calculate(stat = "median")
# Calculate the observed statistic
rent_med_obs <- manhattan %>%
summarize(med = median(rent)) %>%
pull()
# Proportion of simulated bootstrap medians as extreme as observed statistic
rent_med_ht %>%
filter(stat < rent_med_obs) %>%
summarize(p_value = n() / nrow(rent_med_ht))
# Bootstrap distribution centered around observed statistic
ncbirths %>%
specify(response = weight) %>%
generate(reps = 1500, type = "bootstrap") %>%
calculate(stat = "mean") %>%
visualize()
# Bootstrap distribution centered around null statistic
ncbirths %>%
specify(response = weight) %>%
hypothesize(null = "point", mu = 7) %>%
generate(reps = 1500, type = "bootstrap") %>%
calculate(stat = "mean") %>%
visualize()
# Bootstrap distribution centered around null statistic
weight_mean_ht <- ncbirths %>%
# Specify the variable of interest
specify(response = weight) %>%
# Hypothesize the center of bootstrap distribution
hypothesize(null = "point", mu = 7) %>%
# Generate bootstrap resamples
generate(reps = 1500, type = "bootstrap") %>%
# Calculate bootstrap statistics
calculate(stat = "mean")
# Calculate observed statistic
weight_mean_obs <- ncbirths %>%
summarize(mean = mean(weight)) %>%
pull()
# Probability that actual weights are as extreme as the observed statistic in either direction
weight_mean_ht %>%
# Filter for values as extreme in one direction only
filter(stat > weight_mean_obs) %>%
# Multiple the one-tail by 2 for two-tail
summarize(p_value = 2 * (n() / nrow(weight_mean_ht)))
# P(T < 3) with df = 10
(x <- pt(q = 3, df = 10))
# P(T > 3) with df = 10
(y <- 1 - pt(q = 3, df = 10))
# P(T > 3) with df = 100
(z <- 1 - pt(q = 3, df = 100))
# 95th percentile for df = 10
(x <- qt(p = 0.95, df = 10))
# upper bound of middle 95th percent for df = 10
(y <- qt(p = 0.975, df = 10))
# upper bound of middle 95th percent for df = 100
(z <- qt(p = 0.975, df = 100))
t.test(manhattan$rent, conf.level = 0.95)
# 90% CI
t.test(textbooks$diff, conf.level = 0.90)
t.test(textbooks$diff, null = 0, alternative = "two.sided")
# Compute difference between after and before
stem_cell <- stem.cell %>%
mutate(change = before - after)
# Calculate observed difference in means
(diff_mean <- stem_cell %>%
# Group by treatment group
group_by(trmt) %>%
# Calculate mean change for each group
summarize(mean_change = mean(change)) %>%
# Extract
pull() %>%
# Calculate difference
diff())
# Compute difference between after and before
stem_cell <- stem.cell %>%
mutate(change = after - before)
# Calculate observed difference in means
(diff_mean <- stem_cell %>%
# Group by treatment group
group_by(trmt) %>%
# Calculate mean change for each group
summarize(mean_change = mean(change)) %>%
# Extract
pull() %>%
# Calculate difference
diff())
# Generate 1000 differences in means via randomization
diff_ht_mean <- stem_cell %>%
# Specify the model; difference predicted by treatment
specify(change ~ trmt) %>%
# Hypothesize the relationship; no difference between groups
hypothesize(null = "independence") %>%
# Generate permutations to delink existing association
generate(reps = 1000, type = "permute") %>%
# Calculate test statistic
calculate(stat = "diff in means", order = c("esc", "ctrl"))
# Calculate p-value
diff_ht_mean %>%
# Identify simulated test statistics at least as extreme as observed
filter(stat > diff_mean) %>%
# Calculate p-value
summarize(p_val = n() / 1000)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "~/GitHub/osl-gino-kouchaki-galinsky-2015/src")
library(tidyverse) # utility
library(psych) # cronbach's alpha
gino <- read_csv("../data/Gino Kouchaki Galinsky 2015 Experiment 3.csv")
glimpse(gino)
gino_clean <- gino %>%
filter(FAILED_MC == 0) %>%
select(-c(instr, filter, CONDITION, FAILED_MC, MCheck, age, male),
-ends_with("Dummy")) %>%
rename(condition = condition_string)
gino_clean <- within(gino_clean, {
condition <- factor(condition)
})
(gino_means <- gino_clean %>%
mutate(
feelings_of_impurity = select(gino_clean, starts_with("impurity")) %>% rowMeans(),
feelings_of_discomfort = select(gino_clean, starts_with("dissonance")) %>% rowMeans(),
negative_affect = select(gino_clean, starts_with("neg")) %>% rowMeans(),
positive_affect = select(gino_clean, starts_with("pos")) %>% rowMeans(),
embarrassment = select(gino_clean, embarrassed, ashamed) %>% rowMeans(),
self_alienation = select(gino_clean, starts_with("alien")) %>% rowMeans()
) %>%
select(condition, feelings_of_impurity, feelings_of_discomfort, negative_affect,
positive_affect, embarrassment, self_alienation, decided_to_help))
# Cronbach's alpha for feelings of impurity
gino_clean %>%
select(starts_with("impurity")) %>%
psych::alpha()
# Cronbach's alpha for feelings of discomfort
gino_clean %>%
select(starts_with("dissonance")) %>%
psych::alpha()
# Cronbach's alpha for negative affect
gino_clean %>%
select(starts_with("neg")) %>%
psych::alpha()
# Cronbach's alpha for positive affect
gino_clean %>%
select(starts_with("pos")) %>%
psych::alpha()
# Cronbach's alpha for embarrassment
gino_clean %>%
select(embarrassed, ashamed) %>%
psych::alpha()
# Cronbach's alpha for self-alienation
gino_clean %>%
select(starts_with("alien")) %>%
psych::alpha()
(gino_summary <- gino_means %>%
select(-decided_to_help) %>%
gather(key = item, value = score, -condition) %>%
group_by(condition, item) %>%
summarize(
mean = mean(score),
sd = sd(score),
n = n(),
t_star = qt(p = 0.975, df = n - 1),
upper = mean + (t_star * (sd/sqrt(n))),
lower = mean - (t_star * (sd/sqrt(n)))
))
# Factorize item and add labels
(gino_summary <- within(gino_summary, {
item <- factor(item,
levels = c("self_alienation", "feelings_of_impurity", "feelings_of_discomfort",
"negative_affect", "positive_affect", "embarrassment"),
labels = c("Self-alienation", "Feelings of impurity", "Discomfort",
"Negative affect", "Positive affect", "Embarrassment"))
}))
# Drop confidence interval information
(gino_summary_short <- gino_summary %>%
select(condition, item, mean, sd))
# Rename columns
(gino_summary_short <- gino_summary_short %>%
rename(
Variable = item,
M = mean,
SD = sd
) %>%
arrange(Variable))
# Separate by condition
(gino_table <- gino_summary_short %>%
filter(condition == "inauthenticity") %>%
ungroup() %>%
select(Variable, M, SD))
failure <- gino_summary_short %>%
filter(condition == "failure") %>%
ungroup() %>%
select(M, SD)
condition <- gino_summary_short %>%
filter(condition == "neutral") %>%
ungroup() %>%
select(M, SD)
# Prepare table format
(clean_table <- bind_cols(gino_table, failure, condition))
library(xtable)
# Construct table
xtable(clean_table)
getwd()
# Set working directory
setwd("~/GitHub/osl-gino-kouchaki-galinsky-2015/src")
getwd()
# Construct table
apa_table <- xtable(clean_table)
print(apa_table, file = "../data/results/apa_table.png")
print(apa_table, file = "../data/results/apa_table.txt")
?print.xtable
print(apa_table, file = "../data/results/apa_table.pdf")
print(apa_table, type = "html", file = "../data/results/apa_table.html")
# Construct table
kable(clean_table)
library(knitr)
# Construct table
kable(clean_table)
library(kableExtra)
kable(clean_table)
library(knitr)
library(kableExtra)
kable(clean_table, "latex", booktabs = TRUE, caption = "APA Table") %>%
add_header_above(c("", "Inauthenticity", "Failure", "Control"))
kable(clean_table, booktabs = TRUE, caption = "APA Table") %>%
add_header_above(c("", "Inauthenticity", "Failure", "Control"))
kable(clean_table, booktabs = TRUE, caption = "APA Table") %>%
add_header_above(c("", "Inauthenticity", "Failure", "Control"))
kable(clean_table, "latex", booktabs = TRUE, caption = "APA Table") %>%
add_header_above(c("", "Inauthenticity", "Failure", "Control"))
kable(clean_table, caption = "APA Table") %>%
add_header_above(c("", "Inauthenticity", "Failure", "Control"))
?add_header_above
clean_table
kable(clean_table, caption = "APA Table") %>%
add_header_above(c("", "Inauthenticity" = 2, "Failure" = 4, "Control" = 6))
kable(clean_table, caption = "APA Table") %>%
add_header_above(c("", "Inauthenticity" = 2, "Failure" = 3, "Control" = 4))
kable(clean_table, caption = "APA Table") %>%
add_header_above(c("", "Inauthenticity" = 2))
kable(clean_table) %>%
add_header_above(c("", "Inauthenticity" = 2))
kable(clean_table) %>%
add_header_above(header = c("", "Inauthenticity" = 2))
?colspan
kable(clean_table) %>%
add_header_above(header = c(" ", "Inauthenticity" = 2))
kable(clean_table) %>%
add_header_above(header = c(" " = 1, "Inauthenticity" = 2))
kable(clean_table) %>%
add_header_above(header = c(" " = 1, "Inauthenticity" = 7))
kable(clean_table) %>%
add_header_above(header = c(" ", "Inauthenticity" = 7))
kable(clean_table) %>%
add_header_above(header = c(" ", "Inauthenticity" = 6))
kable(clean_table) %>%
add_header_above(header = c(" ", "Inauthenticity" = 4, "Failure" = 6))
kable(clean_table) %>%
add_header_above(header = c(" ", "Inauthenticity" = 3, "Failure" = 6))
kable(clean_table) %>%
add_header_above(header = c(" ", "Inauthenticity" = 2, "Failure" = 6))
kable(clean_table) %>%
add_header_above(header = c(" ", "Inauthenticity" = 2, "Failure" = 5))
kable(clean_table) %>%
add_header_above(header = c(" ", "Inauthenticity" = 2, "Failure" = 4))
kable(clean_table) %>%
add_header_above(header = c(" ", "Inauthenticity" = 2, "Failure" = 4, "Control" = 6))
kable(clean_table) %>%
add_header_above(header = c(" ", "Inauthenticity" = 2, "Failure" = 3, "Control" = 6))
kable(clean_table) %>%
add_header_above(header = c(" ", "Inauthenticity" = 2, "Failure" = 3, "Control" = 4))
kable(clean_table) %>%
add_header_above(header = c(" ", "Inauthenticity" = 2, "Failure" = 3, "Control" = 5))
kable(clean_table) %>%
add_header_above(header = c(" ", "Inauthenticity" = 2, "Failure" = 3, "Control" = 6))
kable(clean_table) %>%
add_header_above(header = c(" ", "Inauthenticity" = 2, "Failure" = 4, "Control" = 6))
kable(clean_table) %>%
add_header_above(header = c(" ", "Inauthenticity" = 2, "Failure" = 5, "Control" = 7))
kable(clean_table) %>%
add_header_above(header = c(" ", "Inauthenticity" = 2, "Failure" = 3, "Control" = 4))
kable(clean_table) %>%
add_header_above(header = c(" ", "Inauthenticity" = 2, "Failure" = 3, "Control" = 5))
kable(clean_table) %>%
add_header_above(header = c(" ", "Inauthenticity" = 2, "Failure" = 3, "Control" = 6))
kable(clean_table) %>%
add_header_above(header = c(" ", "Inauthenticity" = 2, "Failure" = 3, "Control" = 7))
kable(clean_table) %>%
add_header_above(header = c(" ", "Inauthenticity" = 2, "Failure" = 3, "Control" = 4))
kable(clean_table) %>%
add_header_above(header = c(" ", "Inauthenticity" = 2, "Failure" = 4, "Control" = 4))
kable(clean_table) %>%
add_header_above(header = c(" ", "Inauthenticity" = 2, "Failure" = 4, "Control" = 5))
kable(clean_table) %>%
add_header_above(header = c(" ", "Inauthenticity" = 2, "Failure" = 4, "Control" = 6))
kable(clean_table) %>%
add_header_above(header = c(" ", "Inauthenticity" = 2, "Failure" = 4, "Control" = 7))
kable(clean_table) %>%
add_header_above(header = c(" ", "Inauthenticity" = 2, "Failure" = 5, "Control" = 7))
kable(clean_table) %>%
add_header_above(header = c(" ", "Inauthenticity" = 2, "Failure" = 5, "Control" = 6))
kable(clean_table) %>%
add_header_above(header = c(" ", "Inauthenticity" = 2, "Failure" = 2, "Control" = 2))
kable(clean_table, caption = "Mean scores of by condition") %>%
add_header_above(header = c(" ", "Inauthenticity" = 2, "Failure" = 2, "Control" = 2))
kable(clean_table, booktabs = TRUE, caption = "Mean scores of by condition") %>%
add_header_above(header = c(" ", "Inauthenticity" = 2, "Failure" = 2, "Control" = 2))
kable(clean_table, caption = "Mean scores of by condition") %>%
add_header_above(header = c(" ", "Inauthenticity" = 2, "Failure" = 2, "Control" = 2))
kable(clean_table, caption = "Mean scores of by condition") %>%
add_header_above(header = c(" ", "Inauthenticity" = 2, "Failure" = 2, "Control" = 2)) %>%
kable_styling() %>%
kable_as_image()
kable(clean_table, "latex", caption = "Mean scores of by condition") %>%
add_header_above(header = c(" ", "Inauthenticity" = 2, "Failure" = 2, "Control" = 2)) %>%
kable_styling() %>%
kable_as_image()
install.packages("magick")
library(magick)
kable(clean_table, "latex", caption = "Mean scores of by condition") %>%
add_header_above(header = c(" ", "Inauthenticity" = 2, "Failure" = 2, "Control" = 2)) %>%
kable_styling() %>%
kable_as_image()
kable(clean_table, "latex", caption = "Mean scores of by condition") %>%
add_header_above(header = c(" ", "Inauthenticity" = 2, "Failure" = 2, "Control" = 2)) %>%
kable_styling() %>%
kable_as_image()
kable(clean_table, "latex", caption = "Mean scores of by condition") %>%
add_header_above(header = c(" ", "Inauthenticity" = 2, "Failure" = 2, "Control" = 2)) %>%
kable_styling() %>%
kable_as_image()
kable(clean_table, "latex", booktabs = TRUE, caption = "Mean scores of by condition") %>%
add_header_above(header = c(" ", "Inauthenticity" = 2, "Failure" = 2, "Control" = 2)) %>%
kable_styling() %>%
kable_as_image()
kable(clean_table, caption = "Mean scores of by condition") %>%
add_header_above(header = c(" ", "Inauthenticity" = 2, "Failure" = 2, "Control" = 2)) %>%
kable_styling()
kable(clean_table) %>%
add_header_above(header = c(" ", "Inauthenticity" = 2, "Failure" = 2, "Control" = 2)) %>%
kable_styling()
kable(clean_table, digits = 2) %>%
add_header_above(header = c(" ", "Inauthenticity" = 2, "Failure" = 2, "Control" = 2)) %>%
kable_styling()
kable(clean_table, digits = 2,
col.names = c("Variable", "M", "SD", "M", "SD", "M", "SD")) %>%
add_header_above(header = c(" ", "Inauthenticity" = 2, "Failure" = 2, "Control" = 2)) %>%
kable_styling()
kable(clean_table, digits = 2, align = "c",
col.names = c("Variable", "M", "SD", "M", "SD", "M", "SD")) %>%
add_header_above(header = c(" ", "Inauthenticity" = 2, "Failure" = 2, "Control" = 2)) %>%
kable_styling()
kable(clean_table, digits = 2, align = "lcccccc",
col.names = c("Variable", "M", "SD", "M", "SD", "M", "SD")) %>%
add_header_above(header = c(" ", "Inauthenticity" = 2, "Failure" = 2, "Control" = 2)) %>%
kable_styling()
kable(clean_table, booktabs = TRUE, digits = 2, align = "lcccccc",
col.names = c("Variable", "M", "SD", "M", "SD", "M", "SD")) %>%
add_header_above(header = c(" ", "Inauthenticity" = 2, "Failure" = 2, "Control" = 2)) %>%
kable_styling()
kable(clean_table, digits = 2, align = "lcccccc",
col.names = c("Variable", "M", "SD", "M", "SD", "M", "SD")) %>%
add_header_above(header = c(" ", "Inauthenticity" = 2, "Failure" = 2, "Control" = 2)) %>%
kable_styling()
kable(clean_table, digits = 2, align = "lcccccc",
col.names = c("Variable", "M", "SD", "M", "SD", "M", "SD")) %>%
add_header_above(header = c(" ", "Inauthenticity" = 2, "Failure" = 2, "Control" = 2)) %>%
row_spec(hline_after = TRUE) %>%
kable_styling()
kable(clean_table, digits = 2, align = "lcccccc",
col.names = c("Variable", "M", "SD", "M", "SD", "M", "SD")) %>%
add_header_above(header = c(" ", "Inauthenticity" = 2, "Failure" = 2, "Control" = 2)) %>%
row_spec(7, hline_after = TRUE) %>%
kable_styling()
kable(clean_table, digits = 2, align = "lcccccc",
col.names = c("Variable", "M", "SD", "M", "SD", "M", "SD")) %>%
add_header_above(header = c(" ", "Inauthenticity" = 2, "Failure" = 2, "Control" = 2)) %>%
row_spec(6, hline_after = TRUE) %>%
kable_styling()
kable(clean_table, digits = 2, align = "lcccccc",
col.names = c("Variable", "M", "SD", "M", "SD", "M", "SD")) %>%
add_header_above(header = c(" ", "Inauthenticity" = 2, "Failure" = 2, "Control" = 2)) %>%
row_spec(7, hline_after = TRUE) %>%
kable_styling()
kable(clean_table, digits = 2, align = "lcccccc",
col.names = c("Variable", "M", "SD", "M", "SD", "M", "SD")) %>%
add_header_above(header = c(" ", "Inauthenticity" = 2, "Failure" = 2, "Control" = 2)) %>%
row_spec(6, hline_after = TRUE) %>%
kable_styling()
kable(clean_table, "latex", digits = 2, align = "lcccccc",
col.names = c("Variable", "M", "SD", "M", "SD", "M", "SD")) %>%
add_header_above(header = c(" ", "Inauthenticity" = 2, "Failure" = 2, "Control" = 2)) %>%
row_spec(6, hline_after = TRUE) %>%
kable_as_image()
kable(clean_table, "latex", booktabs = TRUE, digits = 2, align = "lcccccc",
col.names = c("Variable", "M", "SD", "M", "SD", "M", "SD")) %>%
add_header_above(header = c(" ", "Inauthenticity" = 2, "Failure" = 2, "Control" = 2)) %>%
row_spec(6, hline_after = TRUE) %>%
kable_as_image()
kable(clean_table, "latex", booktabs = TRUE, digits = 2, align = "lcccccc",
col.names = c("Variable", "M", "SD", "M", "SD", "M", "SD")) %>%
add_header_above(header = c(" ", "Inauthenticity" = 2, "Failure" = 2, "Control" = 2)) %>%
kable_as_image()
